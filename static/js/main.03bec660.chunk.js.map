{"version":3,"sources":["Setting/Setting.module.css","WeatherBlock/WeatherBlock.module.css","utils/getDewPoint.js","utils/getTemp.js","utils/getWindDirtection.js","WeatherBlock/WeatherBlock.jsx","hooks/useWeather.js","Setting/Setting.jsx","App.js","hooks/useYourCity.js","reportWebVitals.js","index.js"],"names":["module","exports","getDewPoint","temp","hum","func","Math","log","round","getTemp","getWindDirection","deg","start","WeatherBlock","city","useState","weather","setWeather","useEffect","axios","get","then","data","useWeather","main","feelsLike","feels_like","className","styles","weatherBlock","title","name","sys","country","src","icon","alt","block","description","wind","speed","pressure","humidity","visibility","DragHandle","sortableHandle","burger","SortableItem","sortableElement","value","deleteCity","onClick","SortableContainer","sortableContainer","children","Setting","cities","setCities","setValue","filter","setting","to","close","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","map","index","text","type","onChange","e","currentTarget","App","isWidgetOpen","setIsWidgetOpen","setCity","coords","latitude","longitude","onError","error","console","geo","navigator","geolocation","watcher","watchPosition","clearWatch","useYourCity","myCity","myRef","useRef","ref","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03bec660.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting\":\"Setting_setting__ZM3lR\",\"settingOpen\":\"Setting_settingOpen__2eAL8\",\"city\":\"Setting_city__3C65X\",\"block\":\"Setting_block__1I0Ga\",\"burger\":\"Setting_burger__2ieGC\",\"close\":\"Setting_close__1ItEe\",\"deleteCity\":\"Setting_deleteCity__1off4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherBlock\":\"WeatherBlock_weatherBlock__3Aq7O\",\"title\":\"WeatherBlock_title__2dnSw\",\"weather\":\"WeatherBlock_weather__sRnfZ\",\"block\":\"WeatherBlock_block__31mBh\",\"wind\":\"WeatherBlock_wind__1mZBG\"};","export const getDewPoint = (temp, hum) => {\r\n  const a = 17.27\r\n  const b = 237.7\r\n  const func = () => (a * temp) / (b + temp) + Math.log(hum / 100)\r\n  \r\n  return Math.round((b * func())/(a-func()))\r\n}","export const getTemp = (temp) => {\r\n  return Math.round(temp - 273)\r\n}","export const getWindDirection = (deg) => {\r\n    const start = 11.25\r\n    const step = 22.5;\r\n    if (deg > (360 - start) && deg <= start) return 'N'\r\n    else if (deg > start && deg <= start+step) return 'NNE'\r\n    else if (deg > start+step && deg <= start+step*2) return 'NE'\r\n    else if (deg > start+step*2 && deg <= start+step*3) return 'ENE'\r\n    else if (deg > start+step*3 && deg <= start+step*4) return 'E'\r\n    else if (deg > start+step*4 && deg <= start+step*5) return 'ESE'\r\n    else if (deg > start+step*5 && deg <= start+step*6) return 'SE'\r\n    else if (deg > start+step*6 && deg <= start+step*7) return 'SSE'\r\n    else if (deg > start+step*7 && deg <= start+step*8) return 'S'\r\n    else if (deg > start+step*8 && deg <= start+step*9) return 'SSW'\r\n    else if (deg > start+step*9 && deg <= start+step*10) return 'SW'\r\n    else if (deg > start+step*10 && deg <= start+step*11) return 'WSW'\r\n    else if (deg > start+step*11 && deg <= start+step*12) return 'W'\r\n    else if (deg > start+step*12 && deg <= start+step*13) return 'WNW'\r\n    else if (deg > start+step*13 && deg <= start+step*14) return 'NW'\r\n    else if (deg > start+step*14 && deg <= start+step*15) return 'NNW'\r\n}","import { useEffect, useState } from 'react';\r\nimport { useWeather } from '../hooks/useWeather';\r\nimport { getDewPoint } from '../utils/getDewPoint';\r\nimport { getTemp } from '../utils/getTemp';\r\nimport { getWindDirection } from '../utils/getWindDirtection';\r\nimport styles from './WeatherBlock.module.css'\r\n\r\nexport const WeatherBlock = ({ city = null}) => {\r\n  const [weather] = useWeather(city);\r\n\r\n  if (!weather) {\r\n    return <></>\r\n  }\r\n\r\n  const temp = getTemp(weather.main.temp);\r\n  const feelsLike = getTemp(weather.main.feels_like)\r\n\r\n  return (\r\n    <div className={styles.weatherBlock}>\r\n      <h2 className={styles.title}>\r\n        {weather.name}, {weather.sys.country}\r\n      </h2>\r\n      <div className={styles.weather}>\r\n        <img src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt=\"\" />\r\n        {temp}°C\r\n      </div>\r\n      <p className={styles.block}>\r\n        Feels likes {feelsLike}°C, {weather.weather[0].description}\r\n      </p>\r\n      <div className={styles.wind}>\r\n        <div className={styles.speed}>{weather.wind.speed} m/s {getWindDirection(weather.wind.deg)}</div>\r\n        <div className={styles.pressure}>{weather.main.pressure}hPA</div>\r\n        <div>Humidity: {weather.main.humidity}%</div>\r\n        <div>Dew point: {getDewPoint(temp, weather.main.humidity)}°C</div>\r\n        <div>Visibility: {weather.visibility / 1000}km</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useWeather = (city) => {\r\n  const [weather, setWeather] = useState();\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=51727deeeb8f27eb66b078e557351768`)\r\n      .then(({ data }) => {\r\n        setWeather(data)\r\n      })\r\n  }, [city])\r\n  return [weather]\r\n}\r\n","import {\r\n  arrayMove,\r\n  sortableContainer,\r\n  sortableElement,\r\n  sortableHandle,\r\n} from 'react-sortable-hoc';\r\nimport styles from './Setting.module.css';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DragHandle = sortableHandle(() => <span className={styles.burger}></span>);\r\n\r\nconst SortableItem = sortableElement(({ value, deleteCity }) => (\r\n  <li className={styles.city}>\r\n    <div className={styles.block}>\r\n      <DragHandle />\r\n      {value}\r\n    </div>\r\n    <button className={styles.deleteCity} onClick={() => {deleteCity(value)}}>X</button>\r\n  </li>\r\n));\r\n\r\nconst SortableContainer = sortableContainer(({ children }) => {\r\n  return <ul>{children}</ul>;\r\n});\r\n\r\nexport const Setting = ({cities, setCities}) => {\r\n  const [value, setValue] = useState('')\r\n  const inputHandler = (e) => {\r\n    setValue(e.currentTarget.value)\r\n  }\r\n\r\n  const addCity = () => {\r\n    setCities([...cities, value])\r\n    setValue('')\r\n  }\r\n\r\n  const deleteCity = (value) => {\r\n    setCities(cities.filter((city) => city !== value))\r\n  }\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setCities(arrayMove(cities, oldIndex, newIndex))\r\n  };\r\n\r\n  return (\r\n    <div className={styles.setting}>\r\n      <h2 className={styles.title}>Settings</h2>\r\n      <Link to='/' className={styles.close}>X</Link>\r\n      <SortableContainer onSortEnd={onSortEnd} useDragHandle>\r\n        {cities.map((value, index) => (\r\n          <SortableItem key={`item-${value}`} index={index} value={value} deleteCity={deleteCity}/>\r\n        ))}\r\n      </SortableContainer>\r\n      <p className={styles.text}>Add location:</p>\r\n      <input type=\"text\" value={value} onChange={inputHandler}/>\r\n      <button onClick={addCity}>A</button>\r\n    </div>\r\n  );\r\n}","import './App.css';\r\nimport { WeatherBlock } from './WeatherBlock'\r\nimport { Setting } from './Setting/Setting'\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { HashRouter, Link, Route } from 'react-router-dom';\r\nimport { useYourCity } from './hooks/useYourCity';\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState(['Moscow'])\r\n  const [isWidgetOpen, setIsWidgetOpen] = useState(true)\r\n  const [myCity] = useYourCity()\r\n\r\n  const myRef = useRef(null)\r\n\r\n  // useEffect(() => {\r\n  //   const closeWidget = (e) => {\r\n  //       if (isWidgetOpen && !myRef.current.contains(e.target)) {\r\n  //         setIsWidgetOpen(false)\r\n  //       }\r\n  //     }\r\n  //   window.addEventListener('click', closeWidget)\r\n  //   return () => { window.removeEventListener('click', closeWidget) }\r\n  // }, [isWidgetOpen])\r\n\r\n  console.log(myCity)\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"App\">\r\n        {\r\n          !isWidgetOpen\r\n            ? <button onClick={() => { setIsWidgetOpen(true) }}>Open</button>\r\n            : <div className='weather-container' ref={myRef}>\r\n              <Route exact path='/'>\r\n                <Link to='setting' className='setting'>Setting</Link>\r\n                {cities.map((city) => <WeatherBlock city={city} key={city} />)}\r\n                <WeatherBlock key='123' />\r\n              </Route>\r\n              <Route path=\"/setting\">\r\n                <Setting cities={cities} setCities={setCities} />\r\n              </Route>\r\n            </div>\r\n        }\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useYourCity = () => {\r\n  const [city, setCity] = useState(null);\r\n\r\n  const onChange = (data) => {\r\n    const {latitude, longitude} = data.coords\r\n    axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=51727deeeb8f27eb66b078e557351768`)\r\n    .then(({data})=> {\r\n      setCity(data.name)\r\n    })\r\n  };\r\n\r\n  const onError = (error) => {\r\n    console.log('error')\r\n  };\r\n\r\n  useEffect(() => {\r\n    const geo = navigator.geolocation;\r\n\r\n    if (!geo) {\r\n      return;\r\n    }\r\n\r\n    const watcher = geo.watchPosition(onChange, onError);\r\n\r\n    return () => geo.clearWatch(watcher);\r\n  }, [city]);\r\n\r\n  return [city];\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}